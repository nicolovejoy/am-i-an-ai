name: Deploy Website

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint
        working-directory: frontend
        run: npm run lint

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get Terraform Outputs
        id: get-terraform
        working-directory: infrastructure
        run: |
          # Initialize terraform to read state
          terraform init -backend=true -input=false
          
          # Get outputs from terraform state
          USER_POOL_ID=$(terraform output -raw cognito_user_pool_id)
          CLIENT_ID=$(terraform output -raw cognito_client_id) 
          WEBSOCKET_URL=$(terraform output -raw websocket_url)
          WEBSITE_URL=$(terraform output -raw website_url)
          CLOUDFRONT_ID=$(terraform output -raw cloudfront_distribution_id)
          
          echo "user_pool_id=$USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "client_id=$CLIENT_ID" >> $GITHUB_OUTPUT
          echo "websocket_url=$WEBSOCKET_URL" >> $GITHUB_OUTPUT
          echo "website_url=$WEBSITE_URL" >> $GITHUB_OUTPUT
          echo "cloudfront_id=$CLOUDFRONT_ID" >> $GITHUB_OUTPUT

      - name: Build Next.js site
        working-directory: frontend
        env:
          NEXT_PUBLIC_COGNITO_USER_POOL_ID: ${{ steps.get-terraform.outputs.user_pool_id }}
          NEXT_PUBLIC_COGNITO_CLIENT_ID: ${{ steps.get-terraform.outputs.client_id }}
          NEXT_PUBLIC_WEBSOCKET_URL: ${{ steps.get-terraform.outputs.websocket_url }}
          NEXT_PUBLIC_DOMAIN_NAME: ${{ steps.get-terraform.outputs.website_url }}
        run: npm run build

      - name: Deploy to S3
        run: |
          aws s3 sync frontend/dist/ s3://robotorchestra.org --delete --cache-control "max-age=86400"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ steps.get-terraform.outputs.cloudfront_id }} --paths "/*"
